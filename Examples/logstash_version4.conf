input {
  syslog {
    port => 5514
    type => "syslog"
  }
}

filter {
  mutate { add_field => { "raw_message_backup" => "%{message}" } }

  grok {
    match => {
      "message" => "<%{POSINT:priority}>%{INT:version} %{TIMESTAMP_ISO8601:timestamp} %{IPORHOST:host} %{WORD:application} %{DATA:proc_id} %{DATA:msg_id} %{GREEDYDATA:raw_message}"
    }
    add_tag => ["parsed_syslog"]
    tag_on_failure => ["syslog_parse_failure"]
  }

  if [priority] {
    ruby {
      code => "
        priority = event.get('priority').to_i
        facility = priority >> 3
        severity = priority & 7
        event.set('facility', facility)
        event.set('severity_level', severity)
        severity_labels = ['Emergency', 'Alert', 'Critical', 'Error', 'Warning', 'Notice', 'Info', 'Debug']
        event.set('severity', severity_labels[severity] || 'Unknown')
      "
    }
  }

  if [application] =~ /(?i)veeam/ {
    mutate { add_field => { "app_type" => "veeam" } }

    grok { match => { "raw_message" => "enterpriseId=\"%{DATA:enterprise_id}\"" } }
    grok { match => { "raw_message" => "categoryId=%{INT:category_id}" } }
    grok { match => { "raw_message" => "instanceId=%{INT:instance_id}" } }
    grok { match => { "raw_message" => "DetectionTimeUTC=\"%{DATA:detection_time_utc}\"" } }
    grok { match => { "raw_message" => "OibID=\"%{DATA:oib_id}\"" } }
    grok { match => { "raw_message" => "ActivityType=\"%{DATA:activity_type}\"" } }
    grok { match => { "raw_message" => "UserName=\"%{DATA:username}\"" } }
    grok { match => { "raw_message" => "ObjectName=\"%{DATA:object_name}\"" } }
    grok { match => { "raw_message" => "VbrHostName=\"%{DATA:vbr_hostname}\"" } }
    grok { match => { "raw_message" => "Description=\"%{DATA:description}\"" } }

    if [username] {
      ruby {
        code => "
          user = event.get('username')
          if user && user.include?('\\\\')
            parts = user.split('\\\\')
            event.set('user_domain', parts[0])
            event.set('clean_username', parts[1])
            event.set('user_type', 'human_user')
          end
        "
      }
    }

    mutate {
      convert => {
        "category_id" => "integer"
        "instance_id" => "integer"
      }
    }

    if [activity_type] == "EncryptedData" {
      mutate {
        add_field => {
          "threat_type" => "potential_ransomware"
          "event_category" => "malware"
          "business_impact" => "high"
          "alert_priority" => "critical"
          "recommendation" => "Immediate investigation required"
        }
      }
    }

    mutate { add_field => { "event_type" => "security_event" } }
  } else {
    mutate { add_field => { "app_type" => "unknown" } }
    mutate { add_field => { "event_type" => "system_log" } }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "syslog-%{+YYYY.MM.dd}"
  }

  if [alert_priority] == "critical" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "security-alerts-%{+YYYY.MM.dd}"
    }
  }

  stdout { codec => rubydebug }
}
